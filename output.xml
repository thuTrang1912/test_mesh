<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.10.12 on linux)" generated="20231208 15:17:18.333" rpa="false" schemaversion="4">
<suite id="s1" name="TC OM Connect to Staging" source="/home/ubuntu/PycharmProjects/MeshAP/TC_OM_Connect to Staging.robot">
<test id="s1-t1" name="Test config" line="73">
<kw name="Connect Mesh AP to Staging">
<kw name="Open SSH Session Login To Local Machine" library="Variable">
<kw name="Open Connection" library="SSHL">
<arg>${ssh_server_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20231208 15:17:18.506" endtime="20231208 15:17:18.507"/>
</kw>
<kw name="Login" library="SSHL">
<var>${login_output}</var>
<arg>${ssh_server_username}</arg>
<arg>${ssh_server_PW}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20231208 15:17:18.507" level="INFO">Logging into '192.168.88.200:22' as 'ubuntu'.</msg>
<msg timestamp="20231208 15:17:21.510" level="FAIL">TimeoutError: timed out</msg>
<status status="FAIL" starttime="20231208 15:17:18.507" endtime="20231208 15:17:21.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${login_output}</arg>
<arg>${ssh_server_username}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.513" endtime="20231208 15:17:21.513"/>
</kw>
<kw name="Execute Command" library="SSHL">
<arg>sudo su</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.513" endtime="20231208 15:17:21.513"/>
</kw>
<kw name="Write" library="SSHL">
<arg>1</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.513" endtime="20231208 15:17:21.513"/>
</kw>
<status status="FAIL" starttime="20231208 15:17:18.506" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="SSH to Mesh Ap">
<arg>${SSH_ip}</arg>
<arg>${SSH_PW}</arg>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Write" library="SSHL">
<arg>cat /etc/config/easycwmp</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Read" library="SSHL">
<var>${Log}</var>
<doc>Consumes and returns everything available on the server output.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Log}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Replace String" library="STR">
<var>${New_Log}</var>
<arg>${Log}</arg>
<arg>mesh</arg>
<arg>mesh-staging</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${New_Log}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Write" library="SSHL">
<var>${result}</var>
<arg>echo "${New_Log}" &gt;&gt; ${Config_path}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Write" library="SSHL">
<var>${final_Result}</var>
<arg>cat /etc/config/easycwmp</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${final_Result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231208 15:17:21.514" endtime="20231208 15:17:21.514"/>
</kw>
<status status="FAIL" starttime="20231208 15:17:18.506" endtime="20231208 15:17:21.514"/>
</kw>
<status status="FAIL" starttime="20231208 15:17:18.506" endtime="20231208 15:17:21.515">TimeoutError: timed out</status>
</test>
<status status="FAIL" starttime="20231208 15:17:18.334" endtime="20231208 15:17:21.515"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="TC OM Connect to Staging">TC OM Connect to Staging</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
